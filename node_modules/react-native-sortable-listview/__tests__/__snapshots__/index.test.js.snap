// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  collapsable={false}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Object {
        "a": Object {
          "text": "a",
        },
        "bb": Object {
          "text": "bb",
        },
        "cc": Object {
          "text": "cc",
        },
        "dd": Object {
          "text": "dd",
        },
        "drag": Object {
          "text": "drag and drop",
        },
        "ee": Object {
          "text": "ee",
        },
        "ff": Object {
          "text": "ff",
        },
        "gg": Object {
          "text": "gg",
        },
        "hello": Object {
          "text": "world",
        },
        "hh": Object {
          "text": "hh",
        },
        "how": Object {
          "text": "are you",
        },
        "ii": Object {
          "text": "ii",
        },
        "jj": Object {
          "text": "jj",
        },
        "kk": Object {
          "text": "kk",
        },
        "real": Object {
          "text": "real",
        },
        "test": Object {
          "text": 123,
        },
        "this": Object {
          "text": "is",
        },
      }
    }
    dataSource={
      ListViewDataSource {
        "items": 0,
      }
    }
    enableEmptySections={true}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onRowMoved={[Function]}
    onScroll={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    order={
      Array [
        "hello",
        "how",
        "test",
        "this",
        "a",
        "real",
        "drag",
        "bb",
        "cc",
        "dd",
        "ee",
        "ff",
        "gg",
        "hh",
        "ii",
        "jj",
        "kk",
      ]
    }
    renderRow={[Function]}
    renderScrollComponent={[Function]}
    scrollEnabled={true}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            world
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            are you
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            123
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            is
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            a
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            real
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            drag and drop
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            bb
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            cc
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            dd
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            ee
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            ff
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            gg
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            hh
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            ii
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            jj
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={
          Array [
            null,
            null,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#F8F8F8",
                "borderBottomWidth": 1,
                "borderColor": "#eee",
                "padding": 25,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
          >
            kk
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
